#!/usr/bin/env ruby

require 'rubygems'
require '/Users/foomip/Documents/Programming/Projects/officer/lib/officer'

daemon_options = {
  :dir_mode   => :system,
  :multiple   => false,
  :monitor    => true,
  :log_output => true
}

def parse_command_line
  if ARGV.include? '--'
    ARGV.slice! 0..ARGV.index('--')
  end

  Choice.options do
    option :host do
      short '-h'
      long '--host=HOST'
      desc 'The hostname or IP to bind to (default: 0.0.0.0)'
    end

    option :port do
      short '-p'
      long '--port=PORT'
      desc 'The port to listen on (default: 11500)'
      cast Integer
    end

    option :log_level do
      short '-l'
      long '--log-level'
      desc 'Set the log level to debug, info, or error (default: error)'
    end

    option :stats do
      short '-s'
      long '--stats'
      desc 'Log stats every 5 seconds (default: off, required log level: info)'
    end

    option :help do
      long '--help'
    end
    
    option :piddir do
      long '--pid-dir'
      desc 'Set directory where pid file will be saved (default /var/run)'
    end
  end
end

# check here for override on pid directory - or else forced to run script as root (what a bad idea)
ARGV.each do |arg|
  if arg =~ /^\-\-pid\-dir\=/
  	pid_file = arg.split('=', 2)[1]
  	daemon_options[:dir_mode] = :normal
  	daemon_options[:dir] = pid_file
  	ARGV.delete arg
  end
end

Daemons.run_proc('officer', daemon_options) do
  parse_command_line
  Officer::Server.new(Choice.choices).run
end